C51 COMPILER V9.52.0.0   BK4802                                                            06/02/2018 13:38:52 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE BK4802
OBJECT MODULE PLACED IN BK4802.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE BK4802.c LARGE OPTIMIZE(6,SPEED) BROWSE INCDIR(G:\CB589P) DEBUG OBJECTEXTEN
                    -D TABS(2)

line level    source

   1          #include "system.h"
   2          #include "BK4802.h"
   3          #include "vco.h"
   4          #include "lcdset.h"
   5          #include "handler.h"
   6          
   7          /***************************************修改记录*****************************************************
   8          Function List：
   9          1、BK4802_Init      4802开启初使化
  10          2、BK4802_RXtoTX    4802接收转发射
  11          3、BK4802_TXtoRX    4802发射转接收
  12          4、BK4802_Change_Freq   4802修改频率
  13          5、BK4802_SLEEP     4802进入休眠
  14          6、BK4802_RssiAndSnr  获取4802接收强度
  15          7、BK4802_ASQ     获取4802静噪强度
  16          
  17          Change Log:
  18           [2018/05/23 16:53 陈兴起] BK4802_TXtoRX AM模式时 发射时 4802发射出所需频率  接收时 4802发射出 （所需频率+
             -10.7M）
  19          
  20          ****************************************************************************************************/
  21          
  22          
  23          u8 isSecess = 1;
  24          
  25          u8 ack;
  26          
  27          /*-------------------------------------------------------------------------
  28          *函数：BK_Start  存储器启动
  29          *参数：无
  30          *返回值：无
  31          *-------------------------------------------------------------------------*/
  32          void BK_Start(void)
  33          {
  34   1        SET_BK4802_SDA;
  35   1        SET_BK4802_SCK;
  36   1        delayus(1);
  37   1        CLS_BK4802_SDA;
  38   1        delayus(1);
  39   1        CLS_BK4802_SCK;
  40   1      }
  41          /*-------------------------------------------------------------------------
  42          *函数：BK_Stop  存储器停止使用
  43          *参数：无
  44          *返回值：无
  45          *-------------------------------------------------------------------------*/
  46          void BK_Stop(void)
  47          {
  48   1        CLS_BK4802_SDA;
  49   1        delayus(1);
  50   1        SET_BK4802_SCK;
  51   1        delayus(1);
  52   1        SET_BK4802_SDA;
  53   1        delayus(1);
C51 COMPILER V9.52.0.0   BK4802                                                            06/02/2018 13:38:52 PAGE 2   

  54   1      }
  55          /*-------------------------------------------------------------------------
  56          *函数：BK_Read_Ack  读1位存储器
  57          *参数：无
  58          *返回值：无
  59          *-------------------------------------------------------------------------*/
  60          u8 BK_Read_Ack(void)
  61          {
  62   1        unsigned char tempTime = 0;
  63   1        CLS_BK4802_SCK;
  64   1        SET_BK4802_SDA_IN;
  65   1        SET_BK4802_SCK;
  66   1        delayus(1);
  67   1        delayus(1);
  68   1        while (BK4802_SDA_IN);
  69   1        CLS_BK4802_SCK;
  70   1        SET_BK4802_SDA_OUT;
  71   1        delayus(2);
  72   1        return 0;
  73   1      }
  74          /*-------------------------------------------------------------------------
  75          *函数：at24c08TxAck  写1位存储器
  76          *参数：ACK要写的字
  77          *返回值：无
  78          *-------------------------------------------------------------------------*/
  79          void BK_ACK()
  80          {
  81   1        //SET_BK4802_SCK;
  82   1        delayus(1);
  83   1        CLS_BK4802_SDA;
  84   1        delayus(1);
  85   1        SET_BK4802_SCK;
  86   1        delayus(1);
  87   1        CLS_BK4802_SCK;
  88   1        delayus(1);
  89   1      }
  90          void BK_NoACK()
  91          {
  92   1        //SET_BK4802_SCK;
  93   1        delayus(1);
  94   1        SET_BK4802_SDA;
  95   1        delayus(1);
  96   1        SET_BK4802_SCK;
  97   1        delayus(1);
  98   1        CLS_BK4802_SCK;
  99   1        delayus(1);
 100   1      }
 101          /*-------------------------------------------------------------------------
 102          *函数：at24c08I2cWriteByte  存储器写入字
 103          *参数：value   要写的字
 104          *返回值：无
 105          *-------------------------------------------------------------------------*/
 106          void BK_Write_Byte(u8 value)
 107          {
 108   1        unsigned char i;
 109   1        CLS_BK4802_SCK;
 110   1        for (i = 0; i<8; i++)
 111   1        {
 112   2          if (value & 0x80)
 113   2          {
 114   3            SET_BK4802_SDA;
 115   3          }
C51 COMPILER V9.52.0.0   BK4802                                                            06/02/2018 13:38:52 PAGE 3   

 116   2          else
 117   2          {
 118   3            CLS_BK4802_SDA;
 119   3          }
 120   2          delayus(2);
 121   2          SET_BK4802_SCK;
 122   2          delayus(2);
 123   2          CLS_BK4802_SCK;
 124   2      
 125   2          value <<= 1;
 126   2        }
 127   1      }
 128          /*-------------------------------------------------------------------------
 129          *函数：at24c08I2cReadByte  存储器读一字
 130          *参数：无
 131          *返回值：读出的字
 132          *-------------------------------------------------------------------------*/
 133          u8 BK_Read_Byte(void)
 134          {
 135   1        u8 i, temp = 0;
 136   1        CLS_BK4802_SCK;
 137   1        SET_BK4802_SDA_IN;
 138   1        delayus(2);
 139   1        for (i = 0; i<8; i++)
 140   1        {
 141   2          temp <<= 1;
 142   2          if (BK4802_SDA_IN)
 143   2          {
 144   3            temp |= 0x01;
 145   3          }
 146   2          SET_BK4802_SCK;
 147   2          delayus(2);
 148   2          CLS_BK4802_SCK;
 149   2          delayus(2);
 150   2        }
 151   1        SET_BK4802_SDA_OUT;
 152   1        return temp;
 153   1      }
 154          /*-------------------------------------------------------------------------
 155          *函数：eepromWriteByte  向存储器是写字
 156          *参数：page 存储器页   addr 存储器地址  value 写入的值
 157          *返回值：无
 158          *-------------------------------------------------------------------------*/
 159          void BK_Write_Reg(u8 addr, u16 value)
 160          {
 161   1        BK_Start();
 162   1        BK_Write_Byte(0x90);
 163   1        BK_Read_Ack();
 164   1        BK_Write_Byte(addr);
 165   1        BK_Read_Ack();
 166   1        BK_Write_Byte(value >> 8);
 167   1        BK_Read_Ack();
 168   1        BK_Write_Byte(value & 0x00ff);
 169   1        BK_Read_Ack();
 170   1        BK_Stop();
 171   1        delayms(5);
 172   1      }
 173          
 174          /*-------------------------------------------------------------------------
 175          *函数：eepromReadByte  读存储器
 176          *参数：无
 177          *返回值：所读的值
C51 COMPILER V9.52.0.0   BK4802                                                            06/02/2018 13:38:52 PAGE 4   

 178          *-------------------------------------------------------------------------*/
 179          u16 BK_Read_Reg(u8 addr)
 180          {
 181   1        u16 value;
 182   1        u8 val1, val2;
 183   1        BK_Start();
 184   1        BK_Write_Byte(0x90);
 185   1        BK_Read_Ack();
 186   1        BK_Write_Byte(addr);
 187   1        BK_Read_Ack();
 188   1        BK_Start();
 189   1        BK_Write_Byte(0x91);
 190   1        BK_Read_Ack();
 191   1        val1 = BK_Read_Byte();
 192   1        BK_ACK();
 193   1        val2 = BK_Read_Byte();
 194   1        BK_NoACK();
 195   1        BK_Stop();
 196   1        value = val1 * 256 + val2;
 197   1        return value;
 198   1      }
 199          void BK4802_IOInit()
 200          {
 201   1        CLS_BK4802_SCK;
 202   1        delayus(1);
 203   1        CLS_BK4802_SDA;
 204   1      
 205   1        delayus(1);
 206   1        SET_BK4802_SDA;
 207   1        delayus(1);
 208   1        SET_BK4802_SCK;
 209   1      }
 210          /*-------------------------------------------------------------------------
 211          *函数：Init_RX  初使进入接收
 212          *参数：无
 213          *返回值：所读的值
 214          *-------------------------------------------------------------------------*/
 215          void Init_RX()
 216          {
 217   1      
 218   1        //BK_Write_Reg(23,0x18ff);
 219   1        //delayms(50);
 220   1        BK_Write_Reg(4, 0x0b00);       //B15： 1-关闭频率综合器； 0-打开频率综合器      RX 0x0c00  TX:0x7200
 221   1                         //B14： 1-关闭接收前端； 0-打开接收前端
 222   1                         //B13： 1-关闭接收中频； 0-打开接收中频
 223   1                         //B12： 1-关闭接收音频； 0-打开接收音频
 224   1                         //B11： 1-关闭发射前端； 0-打开发射前端
 225   1                         //B10： 1-关闭发射拼音； 0-打开发射音频
 226   1                         //B09： 1-关闭采样ADC； 0-打开采样ADC
 227   1      
 228   1        BK_Write_Reg(5, 0x0c04);       //锁相环相关设置，建议用默认值
 229   1        BK_Write_Reg(6, 0xf140);       //锁相环相关设置，建议用默认值
 230   1        BK_Write_Reg(7, 0xed00);       //B10：触发锁相环校准，上升沿有效
 231   1        BK_Write_Reg(8, 0x3fe0);        //锁相环相关设置，建议用默认值
 232   1        BK_Write_Reg(9, 0xe0e0);
 233   1        BK_Write_Reg(10, 0x8543);     //B15~B10：微调晶体振荡器的输出频率                RX:0x00fc  TX:0x00cc
 234   1                          //B07~B06：设置采样ADC的稳压器输出电压
 235   1                          //B05： 1-中频ADC时钟有效； 0-中频ADC时钟失效
 236   1                          //B04： 1-采样ADC时钟有效； 0-采样ADC时钟失效
 237   1                          //B03~B02：微调晶体振荡器的输出幅度
 238   1                          //B01~B00：设置数字稳压器输出电压
 239   1      
C51 COMPILER V9.52.0.0   BK4802                                                            06/02/2018 13:38:52 PAGE 5   

 240   1        BK_Write_Reg(11, 0xf700);      //B15~B13：调整发射音频ADC的参考电压
 241   1                         //B12：增加发射音频VGA增益，约为3dB
 242   1                         //B06：调整麦克风输入电阻。 0-16k Ohm； 1-8k Ohm
 243   1                         //B05：调整麦克风VGA反馈电阻的大小。 0-52k Ohm；
 244   1                         //1-26k Ohm
 245   1                         //B04~B03：调整音频功放P端、 N端非交叠时间。 0-2nS；
 246   1                         //1-3nS； 2-4nS； 3-5nS
 247   1      
 248   1        BK_Write_Reg(12, 0xa066);      //B15~B08： 设置接收中频模数转换器参考电压
 249   1                         //B07~B05： 设置接收中频增益， 3dB/级。 0-0dB； 7-21dB
 250   1                         //B04：设置接收中频滤波器带宽。 0-200kHz； 1-1MHz
 251   1                         //B03：设置接收中频VGA电流偏置。 0-2uA； 1-10uA
 252   1                         //B02~B00：设置接收中频稳压器输出电压
 253   1      
 254   1        BK_Write_Reg(13, 0xffff);      //B15：收发模式控制方式。 0-寄存器控制； 1-DSP控制
 255   1                         //B14：收发模式选择。 0-接收模式； 1-发射模式
 256   1                         //B13：设置低噪声放大器增益。 0-低增益； 1-高增益
 257   1                         //B12~B10：调整低噪声放大器偏置电流
 258   1                         //B09~B07：调整混频器直流偏置
 259   1                         //B05： ASK模式使能。 0-失效； 1-使能
 260   1                         //B04~B03：设置接收前端稳压器输出电压
 261   1                         //B02~B00：调整功率放大器输出功率
 262   1      
 263   1        BK_Write_Reg(14, 0xffe0);      //B15~B14： 发射音频数字滤波器增益。
 264   1                         //0-0dB； 1-1dB； 2-3.5dB； 3-6dB
 265   1                         //B13~B09：发射音量控制。
 266   1                         //B08~B05：带内信号能量设置
 267   1      
 268   1        BK_Write_Reg(15, 0x0210);      //B12~B00：发射限幅设置
 269   1        BK_Write_Reg(16, 0x9e3c);      //B15：发射音频AGC使能。 0-无效； 1-使能
 270   1        BK_Write_Reg(17, 0x1f00);      //TX Audio AGC设置
 271   1        BK_Write_Reg(18, 0xd1d1);      //B15~B04： 发射频偏控制
 272   1        BK_Write_Reg(19, 0x200f);      //B15~B14： CIC滤波器增益。 0-0dB； 1-1dB；
 273   1                         //2-3.5dB； 3-6dB
 274   1                         //B13~B12： FM解调输出幅度设置
 275   1                         //B03~B00：音量调整
 276   1      
 277   1        BK_Write_Reg(20, 0x01ff);      //B15：关闭自动频率校正（AFC）。 0-打开； 1-关闭
 278   1        BK_Write_Reg(21, 0xE000);      //AFC阈值设置
 279   1        BK_Write_Reg(22, 0x0c00);      //B15： IQ上下边带选择。 0-选择上边带； 1-选择下边带
 280   1                         //B14： AFC方向选择。 0-对应上边带； 1-对应下边带
 281   1                         //B07~B00：设置静噪的接收信号强度（RSSI） 阈值
 282   1        if (mCbParam.Modu == FM)
 283   1        {
 284   2          BK_Write_Reg(2, 0xc000);
 285   2        }
 286   1        else
 287   1        {
 288   2          BK_Write_Reg(2, 0xa000);
 289   2        }
 290   1      
 291   1        BK_Write_Reg(1, mVcoParam.l_Fre_Rx); //写入频率
 292   1        BK_Write_Reg(0, mVcoParam.h_Fre_Rx);
 293   1        //CLS_AT_MUTE;       //
 294   1      
 295   1      }
 296          void BK4802_RX()
 297          {
 298   1        Init_RX();
 299   1      }
 300          
 301          
C51 COMPILER V9.52.0.0   BK4802                                                            06/02/2018 13:38:52 PAGE 6   

 302          void BK4802_TX()
 303          {
 304   1        BK4802_TRX = 1;
 305   1        delayms(50);
 306   1        BK_Write_Reg(4, 0x7c00);       //B15： 1-关闭频率综合器； 0-打开频率综合器      RX 0x0c00  TX:0x7200
 307   1                         //B14： 1-关闭接收前端； 0-打开接收前端
 308   1                         //B13： 1-关闭接收中频； 0-打开接收中频
 309   1                         //B12： 1-关闭接收音频； 0-打开接收音频
 310   1                         //B11： 1-关闭发射前端； 0-打开发射前端
 311   1                         //B10： 1-关闭发射拼音； 0-打开发射音频
 312   1                         //B09： 1-关闭采样ADC； 0-打开采样ADC
 313   1      
 314   1        
 315   1        if (mCbParam.Modu == AM && mMenu.isTx == 0)
 316   1        {
 317   2          BK_Write_Reg(2, 0xa000);
 318   2        }
 319   1        else
 320   1        {   
 321   2          BK_Write_Reg(2, 0xc000);      
 322   2        }
 323   1        BK_Write_Reg(1, mVcoParam.l_Fre_Tx); //写入频率
 324   1        BK_Write_Reg(0, mVcoParam.h_Fre_Tx);
 325   1      }
 326          
 327          
 328          /*-------------------------------------------------------------------------
 329          *函数：BK_4802_Init  4802初使化
 330          *参数： 无
 331          *返回值：无
 332          *-------------------------------------------------------------------------*/
 333          void BK4802_Init()
 334          {
 335   1        BK4802_IOInit();  
 336   1        BK4802_TRX = 0;
 337   1        BK4802_TRX = 1;
 338   1        BK4802_TRX = 0;
 339   1        delayms(50);
 340   1        Init_RX();
 341   1        LED_RED = 0;
 342   1        LED_GREEN = 1;
 343   1        LCD_RX(1);
 344   1      }
 345          void BK4802_RXtoTX()
 346          { 
 347   1        CLS_AM_EN;
 348   1        CLS_FM_EN;
 349   1        SET_AT_MUTE;
 350   1        BK4802_TX();
 351   1        CLS_MIC_MUTE;
 352   1        LED_GREEN = 0;
 353   1        LED_RED = 1;
 354   1      }
 355          
 356          void BK4802_TXtoRX()
 357          {
 358   1        SetModu();
 359   1        if (mCbParam.Modu == AM)
 360   1        {     
 361   2          
 362   2          BK4802_TX();    
 363   2        }
C51 COMPILER V9.52.0.0   BK4802                                                            06/02/2018 13:38:52 PAGE 7   

 364   1        else
 365   1        {
 366   2          SET_MIC_MUTE;
 367   2          
 368   2          //CLS_AT_MUTE;      //----------
 369   2      
 370   2          BK4802_TRX = 0;
 371   2          delayms(50);
 372   2          BK4802_RX();    
 373   2        }
 374   1        //CLS_AT_MUTE;
 375   1        LED_RED = 0;
 376   1        LED_GREEN = 1;
 377   1      }
 378          
 379          void BK4802_SLEEP()
 380          {
 381   1        
 382   1      }
 383          
 384          u16 BK4802_RssiAndSnr()
 385          {
 386   1        u16 val;
 387   1        val = BK_Read_Reg(23);  //snr=val[13-8]   rssi=val[6-0];
 388   1        return val;
 389   1      }
 390          u16 BK4802_ASQ()
 391          {
 392   1        return BK_Read_Reg(30);
 393   1      }
 394          
 395          
 396          
 397          
 398          
 399          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1041    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

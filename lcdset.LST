C51 COMPILER V9.52.0.0   LCDSET                                                            06/02/2018 13:38:53 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LCDSET
OBJECT MODULE PLACED IN lcdset.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE lcdset.c LARGE OPTIMIZE(6,SPEED) BROWSE INCDIR(G:\CB589P) DEBUG OBJECTEXTEN
                    -D TABS(2)

line level    source

   1          #include "system.h"
   2          #include "lcdset.h"
   3          
   4          /***************************************修改记录*****************************************************
   5          Function List：LCD对应显示
   6          Change Log:
   7            
   8          
   9          
  10          
  11          ****************************************************************************************************/
  12          
  13          
  14          //                          0    1    2    3    4    5    6    7    8    9     
  15          code const u8 Num_Code[10]={0xaf,0x06,0x6d,0x4f,0xc6,0xcb,0xeb,0x0e,0xef,0xcf};
  16          
  17            
  18          code const u8 country_ecode[27][2]=
  19          {
  20            {0xe9,0xa7},//EU
  21            {0xa9,0xe9},//CE
  22            {0xa7,0xe0},//UK
  23            {0xec,0xa1},//PL
  24            {0x06,0x63},//IO
  25            {0x06,0x6d},//I2    
  26            {0x67,0xe9},//DE
  27            {0x06,0x62},//IN
  28            
  29            {0x60,0xee},//RA
  30            {0x60,0xe3},//RB
  31            {0x60,0xa9},//RC
  32            {0x60,0x67},//RD
  33            {0x60,0xe9},//RE
  34            {0x60,0xe8},//RF
  35            {0x60,0xcf},//RG
  36            {0x60,0xe6},//RH
  37            {0x60,0x06},//RI
  38            {0x60,0xa1},//RL
  39          
  40            
  41            {0xe6,0xee},//HA
  42            {0xe6,0xe3},//HB
  43            {0xe6,0xa9},//HC
  44            {0xe6,0x67},//HD
  45            {0xe6,0xe9},//HE
  46            {0xe6,0xe8},//HF
  47            {0xe6,0xcf},//HG
  48            {0xe6,0xe6},//HH
  49            {0xe6,0x06},//HI
  50          
  51          };
  52          code const u8 lock_ecode[2]={0xae,0xa9};
  53          code const u8 power_ecode[2][2]={{0xa1,0x63},{0xe6,0x06}};
  54          code const u8 buttontone_ecode[2][2]={{0xe3,0xaf},{0xe3,0xe8}};
C51 COMPILER V9.52.0.0   LCDSET                                                            06/02/2018 13:38:53 PAGE 2   

  55          
  56          
  57          
  58          void LCD_FM()
  59          {
  60   1        xLCDDATA1|=0x01;
  61   1        xLCDDATA1 &= ~0x02;
  62   1      }
  63          void LCD_AM()
  64          {
  65   1        xLCDDATA1|=0x02;
  66   1        xLCDDATA1 &= ~0x01;
  67   1      }
  68          void LCD_ASQ(u8 i)
  69          {
  70   1        if(i)xLCDDATA1|=0x04;
  71   1        else xLCDDATA1&=~0x04;
  72   1      }
  73          void LCD_VOX(u8 i)
  74          {
  75   1        if(i)xLCDDATA1|=0x08;
  76   1        else xLCDDATA1&=~0x08;
  77   1      }
  78          void LCD_UK()
  79          {
  80   1        xLCDDATA2&=~0x07;
  81   1        xLCDDATA2|=0x01;
  82   1      
  83   1      }
  84          void LCD_EU()
  85          {
  86   1        xLCDDATA2&=~0x07;
  87   1        xLCDDATA2|=0x02;
  88   1      }
  89          void LCD_DE()
  90          {
  91   1        xLCDDATA2&=~0x07;
  92   1        xLCDDATA2|=0x04;
  93   1      }
  94          void LCD_OtherContry()
  95          {
  96   1        xLCDDATA2 &= ~0x07; 
  97   1      }
  98          
  99          void LCD_PTY(u8 i)
 100          {
 101   1        if(i)xLCDDATA2|=0x08;
 102   1        else xLCDDATA2&=~0x08;
 103   1      }
 104          void LCD_TX(u8 i)
 105          {
 106   1        if(i)xLCDDATA3|=0x01;
 107   1        else xLCDDATA3&=~0x01;
 108   1      }
 109          void LCD_M(u8 i)
 110          {
 111   1        if(i)xLCDDATA3|=0x02;
 112   1        else xLCDDATA3&=~0x02;
 113   1      }
 114          void LCD_SC(u8 i)
 115          {
 116   1        if(i)xLCDDATA3|=0x04;
C51 COMPILER V9.52.0.0   LCDSET                                                            06/02/2018 13:38:53 PAGE 3   

 117   1        else xLCDDATA3&=~0x04;
 118   1      }
 119          void LCD_WL(u8 i)
 120          {
 121   1        if(i)xLCDDATA3|=0x08;
 122   1        else xLCDDATA3&=~0x08;
 123   1      }
 124          void LCD_RX(u8 i)
 125          {
 126   1        if(i)xLCDDATA4|=0x01;
 127   1        else xLCDDATA4&=~0x01;
 128   1      }
 129          void LCD_R(u8 i)
 130          {
 131   1        if(i)xLCDDATA4|=0x02;
 132   1        else xLCDDATA4&=~0x02;
 133   1      }
 134          void LCD_H(u8 i)
 135          {
 136   1        if(i)xLCDDATA4|=0x04;
 137   1        else xLCDDATA4&=~0x04;
 138   1      }
 139          //void LCD_H(u8 i)
 140          //{
 141          //  if(i)xLCDDATA4|=0x04;
 142          //  else xLCDDATA4&=~0x04;
 143          //}
 144          void LCD_NL(u8 i)
 145          {
 146   1        if(i)xLCDDATA4|=0x08;
 147   1        else xLCDDATA4&=~0x08;
 148   1      }
 149          void LCD_NUM1(u8 i)
 150          {
 151   1        xLCDDATA5&=0xf1;
 152   1        xLCDDATA6&=0xf0;
 153   1        xLCDDATA5|=(Num_Code[i]>>4);
 154   1        xLCDDATA6|=(Num_Code[i]&0x0f);  
 155   1      }
 156          
 157          void LCD_NUM2(u8 i)
 158          {
 159   1        xLCDDATA7&=0xf1;
 160   1        xLCDDATA8&=0xf0;
 161   1        xLCDDATA7|=(Num_Code[i]>>4);
 162   1        xLCDDATA8|=(Num_Code[i]&0x0f);
 163   1      }
 164          
 165          void LCD_STRENGTH(u8 i)
 166          {
 167   1        switch(i)
 168   1        {
 169   2          case 0:
 170   2            xLCDDATA0&=0xf0;
 171   2            xLCDDATA5&=0xfe;
 172   2            xLCDDATA7&=0xfe;
 173   2            break;
 174   2          case 1:
 175   2            xLCDDATA0&=0xf0;
 176   2            xLCDDATA0|=0x01;
 177   2            xLCDDATA5&=0xfe;
 178   2            xLCDDATA7&=0xfe;
C51 COMPILER V9.52.0.0   LCDSET                                                            06/02/2018 13:38:53 PAGE 4   

 179   2            break;
 180   2          case 2:
 181   2            xLCDDATA0&=0xf0;
 182   2            xLCDDATA0|=0x03;
 183   2            xLCDDATA5&=0xfe;
 184   2            xLCDDATA7&=0xfe;
 185   2            break;
 186   2          case 3:
 187   2            xLCDDATA0&=0xf0;
 188   2            xLCDDATA0|=0x07;
 189   2            xLCDDATA5&=0xfe;
 190   2            xLCDDATA7&=0xfe;
 191   2            break;
 192   2          case 4:     
 193   2            xLCDDATA0|=0x0f;
 194   2            xLCDDATA5&=0xfe;
 195   2            xLCDDATA7&=0xfe;
 196   2            break;
 197   2          case 5:
 198   2            xLCDDATA0|=0x0f;      
 199   2            xLCDDATA5|=0x01;
 200   2            xLCDDATA7&=0xfe;      
 201   2            break;
 202   2          case 6:
 203   2            xLCDDATA0|=0x0f;      
 204   2            xLCDDATA5|=0x01;
 205   2            xLCDDATA7|=0x01;  
 206   2            break;
 207   2        }
 208   1      }
 209          
 210          void LCD_BUTTONTONE(u8 i)
 211          {
 212   1        xLCDDATA5&=0xf1;
 213   1        xLCDDATA6&=0xf0;
 214   1        xLCDDATA7&=0xf1;
 215   1        xLCDDATA8&=0xf0;
 216   1        xLCDDATA5|=0x0e;
 217   1        xLCDDATA6|=0x03;
 218   1        if(i==1)
 219   1        {   
 220   2          xLCDDATA7|=0x06;
 221   2          xLCDDATA8|=0x03;  
 222   2        }
 223   1        else
 224   1        {   
 225   2          xLCDDATA7|=0x0e;
 226   2          xLCDDATA8|=0x08;
 227   2        }
 228   1      }
 229          
 230          void LCD_LOCK(u8 i)
 231          {
 232   1        xLCDDATA5&=0xf1;
 233   1        xLCDDATA6&=0xf0;
 234   1        xLCDDATA7&=0xf1;
 235   1        xLCDDATA8&=0xf0;
 236   1        if(i==1)
 237   1        {
 238   2          xLCDDATA5|=0x0a;
 239   2          xLCDDATA6|=0x01;
 240   2          xLCDDATA7|=0x0a;
C51 COMPILER V9.52.0.0   LCDSET                                                            06/02/2018 13:38:53 PAGE 5   

 241   2          xLCDDATA8|=0x09;  
 242   2        }
 243   1        else
 244   1        {
 245   2          xLCDDATA5|=0x0a;
 246   2          xLCDDATA6|=0x0f;
 247   2          xLCDDATA7|=0x0e;
 248   2          xLCDDATA8|=0x08;  
 249   2        }
 250   1      }
 251          void LCD_NUM_CLEAR()
 252          {
 253   1        xLCDDATA5&=0xf1;
 254   1        xLCDDATA6&=0xf0;
 255   1        xLCDDATA7&=0xf1;
 256   1        xLCDDATA8&=0xf0;
 257   1      }
 258          
 259          void LCD_COUNTRY(u8 i)
 260          {
 261   1        xLCDDATA5&=0xf1;
 262   1        xLCDDATA6&=0xf0;
 263   1        xLCDDATA5|=(country_ecode[i][0]>>4);
 264   1        xLCDDATA6|=(country_ecode[i][0]&0x0f);
 265   1        xLCDDATA7&=0xf1;
 266   1        xLCDDATA8&=0xf0;
 267   1        xLCDDATA7|=(country_ecode[i][1]>>4);
 268   1        xLCDDATA8|=(country_ecode[i][1]&0x0f);  
 269   1      }
 270          void LCD_TABLE(u8 i)
 271          {
 272   1        xLCDDATA5&=0xf1;
 273   1        xLCDDATA6&=0xf0;
 274   1        xLCDDATA5|=(0x0e);
 275   1        xLCDDATA6|=(0x01);
 276   1        xLCDDATA7&=0xf1;
 277   1        xLCDDATA8&=0xf0;
 278   1        xLCDDATA7|=(Num_Code[i]>>4);
 279   1        xLCDDATA8|=(Num_Code[i]&0x0f);  
 280   1        
 281   1      }
 282          void LCD_POWER(u8 i)
 283          {
 284   1        xLCDDATA5&=0xf1;
 285   1        xLCDDATA6&=0xf0;
 286   1        xLCDDATA5|=(power_ecode[i-1][0]>>4);
 287   1        xLCDDATA6|=(power_ecode[i-1][0]&0x0f);
 288   1        xLCDDATA7&=0xf1;
 289   1        xLCDDATA8&=0xf0;
 290   1        xLCDDATA7|=(power_ecode[i-1][1]>>4);
 291   1        xLCDDATA8|=(power_ecode[i-1][1]&0x0f);
 292   1      }
 293          void LCD_RESET()
 294          {
 295   1        xLCDDATA5&=0xf1;
 296   1        xLCDDATA6&=0xf0;
 297   1        xLCDDATA5|=(0x06);
 298   1        xLCDDATA6|=(0x00);
 299   1        xLCDDATA7&=0xf1;
 300   1        xLCDDATA8&=0xf0;
 301   1        xLCDDATA7|=(0x0e);
 302   1        xLCDDATA8|=(0x01);
C51 COMPILER V9.52.0.0   LCDSET                                                            06/02/2018 13:38:53 PAGE 6   

 303   1      }
 304          void LCD_COLOR(u8 i)
 305          {
 306   1        xLCDDATA5&=0xf1;
 307   1        xLCDDATA6&=0xf0;
 308   1        xLCDDATA5|=(0x0a);
 309   1        xLCDDATA6|=(0x09);
 310   1        xLCDDATA7&=0xf1;
 311   1        xLCDDATA8&=0xf0;
 312   1        xLCDDATA7|=(Num_Code[i]>>4);
 313   1        xLCDDATA8|=(Num_Code[i]&0x0f);
 314   1      }
 315          
 316          
 317          
 318          void LCD_CLEAR()
 319          {
 320   1        xLCDDATA0=0x00;
 321   1        xLCDDATA1=0x00;
 322   1        xLCDDATA2=0x00;
 323   1        xLCDDATA3=0x00;
 324   1        xLCDDATA4=0x00;
 325   1        xLCDDATA5=0x00;
 326   1        xLCDDATA6=0x00;
 327   1        xLCDDATA7=0x00;
 328   1        xLCDDATA8=0x00;
 329   1      }
 330          void LCD_ALL()
 331          {
 332   1        xLCDDATA0=0x0f;
 333   1        xLCDDATA1=0x0f;
 334   1        xLCDDATA2=0x0f;
 335   1        xLCDDATA3=0x0f;
 336   1        xLCDDATA4=0x0f;
 337   1        xLCDDATA5=0x0f;
 338   1        xLCDDATA6=0x0f;
 339   1        xLCDDATA7=0x0f;
 340   1        xLCDDATA8=0x0f;
 341   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1210    ----
   CONSTANT SIZE    =     74    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

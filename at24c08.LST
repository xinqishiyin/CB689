C51 COMPILER V9.52.0.0   AT24C08                                                           06/02/2018 13:38:50 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE AT24C08
OBJECT MODULE PLACED IN at24c08.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE at24c08.c LARGE OPTIMIZE(6,SPEED) BROWSE INCDIR(G:\CB589P) DEBUG OBJECTEXTE
                    -ND TABS(2)

line level    source

   1          #include "system.h"
   2          #include "at24c08.h"
   3          
   4          /***************************************修改记录*****************************************************
   5           Function List：
   6              1、eepromWriteByte      写一字节存储器
   7              2、eepromWritePage      连续写存储器
   8              3、eepromReadByte       读一字节存储器
   9              4、eepromReadSequential 连续读存储器
  10           
  11           Change Log:
  12          
  13          ****************************************************************************************************/
  14          
  15          void initAt24c08()
  16          {
  17   1        I2C_Init();
  18   1      }
  19          
  20          /*-------------------------------------------------------------------------
  21          *函数：eepromWriteByte  向存储器是写字
  22          *参数：page 存储器页   addr 存储器地址  value 写入的值 
  23          *返回值：无
  24          *-------------------------------------------------------------------------*/
  25          void eepromWriteByte(u8 page,u8 addr,u8 value)
  26          { 
  27   1        I2C_Start();  
  28   1        I2C_Send_Byte(page);
  29   1        I2C_Wait_Ack(); 
  30   1        I2C_Send_Byte(addr);
  31   1        I2C_Wait_Ack();
  32   1        I2C_Send_Byte(value);
  33   1        I2C_Wait_Ack();
  34   1        I2C_Stop();
  35   1        delayms(5);
  36   1        //I2C_Start();
  37   1        //I2C_Stop();
  38   1        
  39   1      }
  40          
  41          void eepromWritePage(u8 *p_value,u8 page, u8 addr, u8 len)
  42          {
  43   1        u8 i;
  44   1        I2C_Start();
  45   1        I2C_Send_Byte(page);
  46   1        I2C_Wait_Ack(); 
  47   1        I2C_Send_Byte(addr);
  48   1        I2C_Wait_Ack(); 
  49   1        for(i=0; i<len; i++)
  50   1        {
  51   2          I2C_Send_Byte(*(p_value++));
  52   2          I2C_Wait_Ack();
  53   2        }
  54   1        I2C_Stop();
C51 COMPILER V9.52.0.0   AT24C08                                                           06/02/2018 13:38:50 PAGE 2   

  55   1        delayms(5);
  56   1      }
  57          
  58          
  59          /*-------------------------------------------------------------------------
  60          *函数：eepromReadByte  读存储器
  61          *参数：无  
  62          *返回值：所读的值
  63          *-------------------------------------------------------------------------*/
  64          u8 eepromReadByte(u8 page,u8 addr)
  65          {
  66   1        u8 value; 
  67   1        I2C_Start();
  68   1        I2C_Send_Byte(page);
  69   1        I2C_Wait_Ack(); 
  70   1        I2C_Send_Byte(addr);
  71   1        I2C_Wait_Ack(); 
  72   1        I2C_Start();
  73   1        I2C_Send_Byte(page | 0x01);
  74   1        I2C_Wait_Ack(); 
  75   1        value = I2C_Read_Byte();  
  76   1        I2C_NAck();
  77   1        I2C_Stop();
  78   1        return value;
  79   1      }
  80          void eepromReadSequential(u8 *p_data,u8 page, u8 addr, u8 length)
  81          {
  82   1        u16 i;
  83   1        I2C_Start();
  84   1        I2C_Send_Byte(page);
  85   1        I2C_Wait_Ack(); 
  86   1        I2C_Send_Byte(addr);
  87   1        I2C_Wait_Ack(); 
  88   1        I2C_Start();
  89   1        I2C_Send_Byte(page | 0x01);
  90   1        I2C_Wait_Ack();
  91   1        for(i=0; i<length-1; i++)  //最后一位要另外读，因为读完最后一位发非应答信号
  92   1        {
  93   2          *(p_data + i) = I2C_Read_Byte();
  94   2          I2C_Ack();
  95   2        }
  96   1        *(p_data + i) = I2C_Read_Byte();
  97   1        I2C_NAck();
  98   1        I2C_Stop();
  99   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    401    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      21
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
